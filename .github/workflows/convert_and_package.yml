name: Convert and Package Text Files

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install chardet

    - name: Get release version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      if: github.event_name == 'push'

    - name: Convert to UTF-16 LE and ZIP
      run: |
        mkdir utf16
        for file in *.txt; do
          iconv -f UTF-8 -t UTF-16 "$file" > "utf16/$file"
        done
        zip -r ${{ github.event.repository.name }}_${{ github.event.inputs.release_version || steps.get_version.outputs.VERSION }}_Win11.zip utf16/*.txt

    - name: Convert to Big5 and ZIP
      run: |
        mkdir big5
        for file in *.txt; do
          iconv -f UTF-8 -t BIG5 "$file" > "big5/$file"
        done
        zip -r ${{ github.event.repository.name }}_${{ github.event.inputs.release_version || steps.get_version.outputs.VERSION }}_Win10.zip big5/*.txt

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.release_version || github.ref }}
        release_name: Release ${{ github.event.inputs.release_version || github.ref }}
        draft: false
        prerelease: false

    - name: Upload UTF-16 LE Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ github.event.repository.name }}_${{ github.event.inputs.release_version || steps.get_version.outputs.VERSION }}_Win11.zip
        asset_name: ${{ github.event.repository.name }}_${{ github.event.inputs.release_version || steps.get_version.outputs.VERSION }}_Win11.zip
        asset_content_type: application/zip

    - name: Upload Big5 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ github.event.repository.name }}_${{ github.event.inputs.release_version || steps.get_version.outputs.VERSION }}_Win10.zip
        asset_name: ${{ github.event.repository.name }}_${{ github.event.inputs.release_version || steps.get_version.outputs.VERSION }}_Win10.zip
        asset_content_type: application/zip