name: Convert and Package Text Files

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Get release version
      id: get_version
      run: |
        if [ "${{ github.event_name }}" = "push" ]; then
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        else
          echo "VERSION=${{ github.event.inputs.release_version }}" >> "$GITHUB_ENV"
        fi
    - name: Convert UTF-8 to UTF-16 LE BOM
      run: |
        import os

        input_dir = 'input'
        output_dir = 'utf16'

        if not os.path.exists(output_dir):
            os.makedirs(output_dir)

        for filename in os.listdir(input_dir):
            if filename.endswith(".txt"):
                with open(os.path.join(input_dir, filename), 'r', encoding='utf-8') as f:
                    content = f.read()
                
                with open(os.path.join(output_dir, filename), 'w', encoding='utf-16-le') as f:
                    # Write BOM for UTF-16 LE
                    f.write('\ufeff')
                    f.write(content)

      shell: python

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}
        release_name: Release ${{ env.VERSION }}
        draft: false
        prerelease: false

    - name: Upload UTF-16 LE Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ github.event.repository.name }}_${{ env.VERSION }}.zip
        asset_name: ${{ github.event.repository.name }}_${{ env.VERSION }}.zip
        asset_content_type: application/zip

